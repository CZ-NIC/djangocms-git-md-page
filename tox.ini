[tox]
minversion = 3.7.0
envlist =
    clear-coverage
    quality
    translations
    migrations
    py38
    py39
    py310
    compute-coverage
skip_missing_interpreters = True

[testenv]
depends =
    clear-coverage
setenv =
    PYTHONPATH = {toxinidir}/git_md_page/tests
    DJANGO_SETTINGS_MODULE = settings
skip_install =
    coverage: True
deps =
    asgiref
    coverage
commands =
    coverage run --parallel-mode --source=git_md_page --branch -m django test {posargs}

[testenv:clear-coverage]
depends =
commands =
    coverage erase

[testenv:compute-coverage]
depends =
    py{38,39,310}
commands =
    coverage combine
    coverage report --include=*/tests/* --fail-under=100 --show-missing
    coverage report --omit=*/tests/* --fail-under=100 --show-missing

[testenv:quality]
basepython = python3
depends =
extras = quality
deps =
    types-Markdown
# Do not fail on first error, but run all the checks
ignore_errors = True
commands =
    isort --check-only --diff git_md_page
    flake8 --format=pylint --show-source git_md_page
    pydocstyle git_md_page
    mypy --package git_md_page
    sh -ec "if which black; then black --check --diff --fast setup.py git_md_page; else echo WARNING: Black not found; fi"
whitelist_externals = sh

[testenv:translations]
basepython = python3
depends = quality
whitelist_externals =
    msgcmp
    rm
# Do not fail on first error, but run all the checks
ignore_errors = True
extras = quality
changedir = {toxinidir}/git_md_page
commands =
    polint --show-msg locale/cs/LC_MESSAGES/django.po
    django-admin makemessages --locale c --no-obsolete --no-location --keep-pot
    msgcmp locale/cs/LC_MESSAGES/django.po locale/django.pot
    -rm -r locale/django.pot locale/c

[testenv:migrations]
basepython = python3
depends =
extras = quality
commands =
    django-admin --version
    django-admin makemigrations git_md_page --check --noinput --dry-run --verbosity 3
